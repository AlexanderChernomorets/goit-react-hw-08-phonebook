{"version":3,"file":"static/js/907.e2de79f3.chunk.js","mappings":"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","sources":["components/FormAddContact/FormAddContact.styled.js","components/ModalFormEditContact/ModalFormEditContact.styled.js","components/ModalFormEditContact/ModalFormEditContact.js","hook/useFormFields.js","views/LogInView/LoginView.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitleForm = styled.h2`\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  color: rgb(52, 52, 52);\n  font-family: Ultra, sans-serif;\n  font-size: 30px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n\nexport const FormContact = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  color: rgba(0, 0, 0, 0.8);\n  border: 1px solid grey;\n  border-radius: 5px;\n  margin: 1px 20px;\n  width: 350px;\n  padding: 10px 40px;\n  background-color: whitesmoke;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\nmargin-top: 10px;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-family: Ultra, sans-serif;\n  font-size: 20px;\n  text-shadow: lightgrey 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  background: rgb(59, 79, 87);\n  background: linear-gradient(\n    90deg,\n    rgba(59, 79, 87, 1) 13%,\n    rgba(86, 96, 147, 1) 79%\n  );\n  border: 1px solid #000;\n  border-radius: 4px;\n  box-shadow: #fff 4px 4px 0 0, #000 4px 4px 0 1px;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  font-family: Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 800;\n  line-height: 20px;\n  margin: 30px auto 10px;\n  max-weight: 50px;\n  padding: 12px 10px;\n  text-align: center;\n  text-transform: uppercase;\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n    outline: 0;\n    box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n    transform: translate(2px, 2px);\n  }\n  :focus {\n    box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n    outline: 0;\n    box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n    transform: translate(2px, 2px);\n  }\n`;\nexport const FormInput = styled.input`\n  border: 1px solid grey;\n  border-radius: 4px;\n  height: 30px;\n  margin: 5px 0;\n  padding-left: 10px;\n  :hover {\n    box-shadow: 2px 2px 2px rgb(0 0 0 / 70%);\n  }\n  :focus {\n    box-shadow: 2px 2px 2px rgb(0 0 0 / 70%);\n  }\n`;","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  \n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 2000;\n`\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n    font-weight: 500;\n    text-align: center;\n    font-size: 22px;\n`\nexport const Modal = styled.h2`\n padding: 30px 20px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 90%;\n    max-width: 500px;\n    height: 330px;\n    background-color: var(--bg-color);\n    border-radius: 4px;\n`\nexport const ClsButton = styled.button`\n\nbackground: rgb(59, 79, 87);\nbackground: linear-gradient(\n  90deg,\n  rgba(59, 79, 87, 1) 13%,\n  rgba(86, 96, 147, 1) 79%\n);\nborder: 1px solid #000;\nborder-radius: 4px;\nbox-shadow: #fff 1px 1px 0 0, #000 1px 1px 0 1px;\nbox-sizing: border-box;\ncolor: #fff;\ncursor: pointer;\nfont-family: Arial, sans-serif;\nfont-size: 10px;\nfont-weight: 400;\nwidth: 25px;\ntext-align: center;\ntext-transform: uppercase;\n:hover {\n  box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n  outline: 0;\n  box-shadow: #fff 0px 0px 0 0, #000 0px 0px 0 0px;\n  transform: translate(2px, 2px);\n}\n:focus {\n  box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n  outline: 0;\n  box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n  transform: translate(2px, 2px);\n}\n`;\n\n  \n\n  \n//   .closeBtn {\n//     position: absolute;\n//     top: 5px;\n//     right: 5px;\n//   }\n  \n//   .form {\n//     width: 100%;\n//     max-width: 400px;\n//     display: flex;\n//     flex-direction: column;\n//     margin: 0 auto;\n//   }\n  \n//   .labelText {\n//     color: inherit;\n//     transition: all 200ms ease-in-out;\n//   }\n  \n//   .labelText:hover,\n//   .labelText:focus-within {\n//     color: var(--accent-color);\n//   }\n  \n//   .input {\n//     width: 100%;\n//     padding: 10px 20px;\n//     margin-bottom: 10px;\n//     margin-top: 5px;\n  \n//     color: inherit;\n//     background-color: transparent;\n//     border: 1px solid var(--border-color);\n//     border-radius: 4px;\n//   }\n  \n//   .input:hover,\n//   .input:focus {\n//     border-color: var(--accent-color);\n//   }\n  \n//   .btn {\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//     width: 200px;\n//     height: 40px;\n//     margin: 0 auto;\n//     margin-top: 20px;\n  \n//     font-size: 18px;\n//     font-weight: 500;\n//     background-color: transparent;\n//     border: 1px solid var(--border-color);\n//     border-radius: 4px;\n//     cursor: pointer;\n//     color: var(--main-text-color);\n  \n//     transform: scale(1);\n//     transition: all 200ms linear;\n//   }\n  \n//   .btn:hover,\n//   .btn:focus {\n//     transform: scale(1.05);\n//     color: var(--accent-color);\n//     border-color: var(--accent-color);\n//   }\n  \n//   .btn:hover .addContactIcon,\n//   .btn:focus .addContactIcon {\n//     color: var(--accent-color);\n//   }\n  \n//   .addContactIcon {\n//     width: 20px;\n//     height: 20px;\n//     margin-right: 10px;\n//     color: var(--border-color);\n//   }\n  \n","import { useCallback, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useEditContactMutation } from 'redux/contacts';\nimport useFormFields from '../../hook/useFormFields';\nimport { updateModalState, resetOpenedContact } from 'redux/modal/modalActions';\nimport { isModalShownSelector } from 'redux/modal/modalSelectors';\nimport { ClsButton, Modal, Overlay } from './ModalFormEditContact.styled';\nimport { FormContact, FormInput, FormLabel, TitleForm } from 'components/FormAddContact/FormAddContact.styled';\nimport { FormButton } from 'views/LogInView/LoginView.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function ModalFormEditContact({ openedContact }) {\n  const [editContact, { isLoading }] = useEditContactMutation();\n  const {\n    state: name,\n    // eslint-disable-next-line no-unused-vars\n    setState: setName,\n    handleChange: handleNameChange,\n  } = useFormFields(openedContact.name);\n  const {\n    state: number,\n    // eslint-disable-next-line no-unused-vars\n    setState: setNumber,\n    handleChange: handleNumberChange,\n  } = useFormFields(openedContact.number);\n  const dispatch = useDispatch();\n  const isModalShown = useSelector(isModalShownSelector);\n\n  const handleEditSubmit = evt => {\n    evt.preventDefault();\n    const contactData = {\n      name,\n      number,\n    };\n\n    editContact({ id: openedContact.id, contact: contactData })\n      .then(() => dispatch(updateModalState()))\n      .then(() => dispatch(resetOpenedContact()));\n  };\n\n  const onBackdropClose = useCallback(\n    evt => {\n      if (evt.target === evt.currentTarget) {\n        dispatch(updateModalState());\n      }\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    const handleKeyDown = evt => {\n      if (evt.code === 'Escape') {\n        dispatch(updateModalState());\n      }\n    };\n\n    if (isModalShown) {\n      window.addEventListener('keydown', handleKeyDown);\n      document.body.classList.add('modal-is-open');\n    }\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.classList.remove('modal-is-open');\n    };\n  }, [dispatch, isModalShown]);\n\n  return createPortal(\n    <Overlay onClick={onBackdropClose}>\n      <Modal>\n        \n\n        \n        <FormContact onSubmit={handleEditSubmit}>\n        <ClsButton\n          aria-label=\"close modal button\"\n          color=\"inherit\"\n          onClick={() => dispatch(updateModalState())}\n        >\n           X\n        </ClsButton>\n          <TitleForm>Please edit your contact:</TitleForm>\n          <FormLabel>\n            Name\n            <FormInput\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleNameChange}\n              maxLength={30}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </FormLabel>\n          <FormLabel >\n            Number\n            <FormInput\n             \n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              maxLength={17}\n              onChange={handleNumberChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits, contain spaces, dashes, parentheses and start with +\"\n              required\n            />\n          </FormLabel>\n          <FormButton type=\"submit\">\n            {isLoading ? 'Saving...' : 'Save contact'}\n          </FormButton>\n        </FormContact>\n      </Modal>\n    </Overlay>,\n    modalRoot\n  );\n}\nModalFormEditContact.propTypes = {\n  openedContact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { useState } from 'react';\n\nexport default function useFormFields(initialVal) {\n  const [state, setState] = useState(initialVal);\n\n  const handleChange = ({ target: { value } }) => {\n    setState(value);\n  };\n\n  return { state, setState, handleChange };\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 30px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n\nexport const FormContact = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  color: rgba(0, 0, 0, 0.8);\n  border: 1px solid grey;\n  border-radius: 5px;\n  margin: auto;\n  width: 350px;\n  padding: 10px 40px;\n  background-color: whitesmoke;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-family: Ultra, sans-serif;\n  font-size: 20px;\n  text-shadow: lightgrey 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  background: rgb(59, 79, 87);\n  background: linear-gradient(\n    90deg,\n    rgba(59, 79, 87, 1) 13%,\n    rgba(86, 96, 147, 1) 79%\n  );\n  border: 1px solid #000;\n  border-radius: 4px;\n  box-shadow: #fff 4px 4px 0 0, #000 4px 4px 0 1px;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n\n  font-family: Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 800;\n  line-height: 20px;\n  margin: 30px auto 10px;\n  max-weight: 50px;\n  padding: 12px 10px;\n  text-align: center;\n  text-transform: uppercase;\n\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n    outline: 0;\n    box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n    transform: translate(2px, 2px);\n  }\n  :focus {\n    box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n    outline: 0;\n    box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n    transform: translate(2px, 2px);\n  }\n`;\nexport const FormInput = styled.input`\n  border: 1px solid grey;\n  border-radius: 4px;\n  height: 30px;\n  margin: 5px 0;\n  padding-left: 10px;\n\n  :hover {\n    box-shadow: 2px 2px 2px rgb(0 0 0 / 70%);\n  }\n\n  :focus {\n    box-shadow: 2px 2px 2px rgb(0 0 0 / 70%);\n  }\n`;\n"],"names":["TitleForm","styled","FormContact","FormLabel","FormButton","FormInput","Overlay","Modal","ClsButton","modalRoot","document","querySelector","ModalFormEditContact","openedContact","useEditContactMutation","editContact","isLoading","useFormFields","name","state","handleNameChange","setState","handleChange","number","handleNumberChange","dispatch","useDispatch","isModalShown","useSelector","isModalShownSelector","onBackdropClose","useCallback","evt","target","currentTarget","updateModalState","useEffect","handleKeyDown","code","window","addEventListener","body","classList","add","removeEventListener","remove","createPortal","onClick","onSubmit","preventDefault","contactData","id","contact","then","resetOpenedContact","color","type","value","onChange","maxLength","pattern","title","required","initialVal","useState","Title"],"sourceRoot":""}